Алгоритм работы с gitom
1) Создаем с помощю команды 
'init' -- на нужном нам в папке

2) потом можно проверит с помщю команды 'git status' готов ли git работать с наими файламы

3) Чтобы игнорировать какой файл создаем '.gitigonre' файл

4)чтобы за какойто файлом не следить используем команду
Пример: git rm --cached <file name> 

5) Что бы добавит файл 
'git add <file name>'

6) git log -- просмотр комметенных файлов

7) git congif --global user.email 'sekerjanymm@gmail.com'
git config --global user.name 'Your name';

8) git commit -m 'Salam 2 was added'

9) Что бы подкючится к серверу или слить все файлы 
'git push origin master'


/**
* Это общие команды Git, используемые в различных ситуациях:
**/

запустите рабочую область (см. также: учебник по git help)
   clone ===  Клонировать репозиторий в новый каталог
   init  ===  Создать пустой репозиторий Git или повторно инициализировать существующий

работайте над текущими изменениями (см. также: git help daily)
   add   ===  Добавить Добавить содержимое файла в индекс
   mv    ===  Переместить или переименовать файл, каталог или символическую ссылку
   reset ===  Сброс текущего HEAD в указанное состояние
   rm    ===  Удалить файлы из рабочего дерева и из индекса

изучите историю и состояние (см. также: git help revisions)
   bisect ===  Используйте бинарный поиск, чтобы найти фиксацию, введшую ошибку
   grep   ===  Печатать строки, соответствующие шаблону
   log    ===  Показать журналы фиксации
   show   ===  Показать различные типы объектов
   status ===  Показывать статус рабочего дерева

расти, маркировать и настраивать свою общую историю
	 branch   ===  Список, создание или удаление ветвей
   checkout ===  Переключение ветвей или восстановление рабочих файлов дерева
   commit   ===  Запись изменений в репозиторий
   diff     ===  Показать изменения между коммитами, фиксацией и рабочим деревом и т. д.
   merge    ===  Присоединяйтесь к двум или более историям разработки вместе
   rebase   ===  Reapply фиксируется поверх другого базового наконечника
   tag      ===  Создайте, перечислите, удалите или проверьте объект тега, подписанный с GPG

сотрудничать (см. также: рабочие процессы git help)
   fetch ===  Загрузка объектов и ссылок из другого репозитория
   pull  ===  Извлечь и интегрировать с другим репозиторием или локальной ветвью
   push  ===  Обновить удаленные ссылки вместе со связанными объектами

«git help -a» и «git help -g» доступны доступные подкоманды и некоторые
концептуальные руководства. См. 'Git help <command>' или 'git help <concept>'
для чтения о конкретной подкоманде или концепции.